import{_ as i,c as s,o as n,j as e,ae as l,a as o,t as r}from"./chunks/framework.9lSiMQVd.js";const b=JSON.parse('{"title":"自定义脚手架","description":"","frontmatter":{"title":"自定义脚手架","date":"2024-11-10","outline":[2,3],"tags":"npm"},"headers":[],"relativePath":"article/npm-自定义脚手架.md","filePath":"article/npm-自定义脚手架.md"}'),p={name:"article/npm-自定义脚手架.md"},d={id:"frontmatter-title",tabindex:"-1"};function c(a,t,_,m,h,f){return n(),s("div",null,[e("h1",d,[o(r(a.$frontmatter.title)+" ",1),t[0]||(t[0]=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1))]),t[1]||(t[1]=l('<ol><li><p>项目根目录执行npm init命令初始项目</p></li><li><p>项目根目录创建bin/cli.js文件，并添加如下代码</p></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env node</span></span></code></pre></div><ol start="3"><li><p>修改package.json文件添加bin字段，如bin:cli文件相对路径，又或者{[name]:路径}形式定义多个可执行文件</p></li><li><p>执行npm link命令，使变成全局包</p></li><li><p>接下来的事就是在cli.js文件里写nodejs代码实现脚手架功能了</p></li></ol>',3))])}const g=i(p,[["render",c]]);export{b as __pageData,g as default};
