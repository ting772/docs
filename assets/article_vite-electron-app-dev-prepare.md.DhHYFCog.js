import{_ as n,c as e,o as t,j as i,ae as l,a as p,t as h}from"./chunks/framework.YyOF0cHw.js";const u=JSON.parse('{"title":"vite-vue electron app开发环境搭建","description":"","frontmatter":{"title":"vite-vue electron app开发环境搭建","date":"2025-3-12","outline":[2,3],"tags":"vite,electron"},"headers":[],"relativePath":"article/vite-electron-app-dev-prepare.md","filePath":"article/vite-electron-app-dev-prepare.md"}'),k={name:"article/vite-electron-app-dev-prepare.md"},r={id:"frontmatter-title",tabindex:"-1"};function d(a,s,o,c,E,g){return t(),e("div",null,[i("h1",r,[p(h(a.$frontmatter.title)+" ",1),s[0]||(s[0]=i("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1))]),s[1]||(s[1]=l(`<h3 id="_1-生成vue项目-或者准备已有项目" tabindex="-1">1. 生成vue项目，或者准备已有项目 <a class="header-anchor" href="#_1-生成vue项目-或者准备已有项目" aria-label="Permalink to &quot;1. 生成vue项目，或者准备已有项目&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue@latest</span></span></code></pre></div><h3 id="_2-安装vite-plugin-electron-vite-plugin-electron-renderer包" tabindex="-1">2. 安装vite-plugin-electron，vite-plugin-electron-renderer包 <a class="header-anchor" href="#_2-安装vite-plugin-electron-vite-plugin-electron-renderer包" aria-label="Permalink to &quot;2. 安装vite-plugin-electron，vite-plugin-electron-renderer包&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite-plugin-electron</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite-plugin-electron-renderer</span></span></code></pre></div><h3 id="_3-在vite配置文件vite-config-ts中追加-plugins项-参考" tabindex="-1">3. 在vite配置文件vite.config.ts中追加 plugins项 <a href="https://github.com/electron-vite/vite-plugin-electron" target="_blank" rel="noreferrer">参考</a> <a class="header-anchor" href="#_3-在vite配置文件vite-config-ts中追加-plugins项-参考" aria-label="Permalink to &quot;3. 在vite配置文件vite.config.ts中追加 plugins项 [参考](https://github.com/electron-vite/vite-plugin-electron)&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> electron </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite-plugin-electron/simple&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> electronRenderer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite-plugin-electron-renderer&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    electron</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      main: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Shortcut of \`build.lib.entry\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        entry: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;electron/main.ts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      preload: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Shortcut of \`build.rollupOptions.input\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        input: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;electron/preload.ts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Optional: Use Node.js API in the Renderer process</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      renderer: {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    electronRenderer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_4-项目结构推荐如下" tabindex="-1">4. 项目结构推荐如下 <a class="header-anchor" href="#_4-项目结构推荐如下" aria-label="Permalink to &quot;4. 项目结构推荐如下&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>├─┬ electron</span></span>
<span class="line"><span>│ ├── main.ts</span></span>
<span class="line"><span>├─┬ src</span></span>
<span class="line"><span>│ ├── main.ts</span></span>
<span class="line"><span>│ ├── style.css</span></span>
<span class="line"><span>│ └── vite-env.d.ts</span></span>
<span class="line"><span>├── .gitignore</span></span>
<span class="line"><span>├── favicon.svg</span></span>
<span class="line"><span>├── index.html</span></span>
<span class="line"><span>├── package.json</span></span>
<span class="line"><span>├── tsconfig.json</span></span>
<span class="line"><span>└── vite.config.ts</span></span></code></pre></div><h3 id="_5-创建electron-main-ts文件-加入main进程基本代码" tabindex="-1">5. 创建electron/main.ts文件，加入main进程基本代码 <a class="header-anchor" href="#_5-创建electron-main-ts文件-加入main进程基本代码" aria-label="Permalink to &quot;5. 创建electron/main.ts文件，加入main进程基本代码&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { app, BrowserWindow } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;electron&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">whenReady</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> win</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BrowserWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Main window&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // You can use \`process.env.VITE_DEV_SERVER_URL\` when the vite command is called \`serve\`</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_DEV_SERVER_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    win.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loadURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_DEV_SERVER_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Load your file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    win.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dist/index.html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_6-package-json添加main字段如下" tabindex="-1">6. package.json添加main字段如下 <a class="header-anchor" href="#_6-package-json添加main字段如下" aria-label="Permalink to &quot;6. package.json添加main字段如下&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dist-electron/main.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_7-至此-npm-run-dev开始开发了-npm-create-vue-latest生成项目包含该命令" tabindex="-1">7. 至此 npm run dev开始开发了（npm create vue@latest生成项目包含该命令） <a class="header-anchor" href="#_7-至此-npm-run-dev开始开发了-npm-create-vue-latest生成项目包含该命令" aria-label="Permalink to &quot;7. 至此 npm run dev开始开发了（npm create vue@latest生成项目包含该命令）&quot;">​</a></h3>`,13))])}const v=n(k,[["render",d]]);export{u as __pageData,v as default};
